{"version":3,"file":"noRegex.js","sources":["../src/noRegex.ts"],"sourcesContent":["export interface iNoRegexOpt {\r\n    acceptStrings?: boolean,\r\n    acceptNumbers?: boolean,\r\n    acceptUppercase?: boolean,\r\n    acceptLowercase?: boolean,\r\n    acceptAccents?: boolean,\r\n    acceptSpecialChars?: boolean,\r\n    acceptWhiteSpaces?: boolean,\r\n    specialRules?: {\r\n        allowedChars?: string,\r\n        forbiddenChars?: string,\r\n    },\r\n    length?: {\r\n        min?: number,\r\n        max?: number,\r\n        equals?: number,\r\n    },\r\n    affix?: {\r\n        startsWith?: string,\r\n        endsWith?: string,\r\n    }\r\n}\r\n\r\nexport default class noRegex {\r\n    static DEFAULT :iNoRegexOpt = {\r\n        acceptStrings: true,\r\n        acceptNumbers: true,\r\n        acceptUppercase: true,\r\n        acceptLowercase: true,\r\n        acceptAccents: true,\r\n        acceptSpecialChars: true,\r\n        acceptWhiteSpaces: true,\r\n        specialRules: {\r\n            allowedChars: undefined,\r\n            forbiddenChars: undefined,\r\n        },\r\n        length: {\r\n            min: undefined,\r\n            max: undefined,\r\n            equals: undefined,\r\n        },\r\n        affix: {\r\n            startsWith: undefined,\r\n            endsWith: undefined,\r\n        }\r\n    };\r\n\r\n    static CHAR_LISTS = {\r\n        LOWER_CASE: 'abcdefghijklmnopqrstuvwxyz',\r\n        UPPER_CASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n        /*ACCENTS_BCK: 'ÀÁÂÃÄÅĄĀāàáâãäåąßÒÓÔÕÕÖØŐòóôőõöøĎďŽžÈÉÊËĘèéêëęðÇçČčĆćÐÌÍÎÏĪìíîïīÙÚÛÜŰùűúûüĽĹŁľĺłÑŇŃňñńŔŕŠŚŞšśşŤťŸÝÿýŽŻŹžżźđĢĞģğ',\r\n        ACCENTS_REPLACE_BCK: 'AAAAAAAAaaaaaaaasOOOOOOOOoooooooDdZzEEEEEeeeeeeCcCcCcDIIIIIiiiiiUUUUUuuuuuLLLlllNNNnnnRrSSSsssTtYYyyZZZzzzdGGgg',*/\r\n        ACCENTS_UPPER: 'ÀÁÂÃÄÅĄĀßÒÓÔÕÕÖØŐĎŽžÈÉÊËĘÇČĆÐÌÍÎÏĪÙÚÛÜŰĽĹŁÑŇŃŔŠŚŞŤŸÝŽŻŹĢĞ',\r\n        ACCENTS_UPPER_REPLACE: 'AAAAAAAASOOOOOOOODZEEEEEECCCDIIIIIUUUUULLLNNNRSSSTYYZZZGG',\r\n        ACCENTS_LOWER: 'āàáâãäåąòóôőõöøďžèéêëęðçčćìíîïīùűúûüľĺłňñńŕšśşťÿýžżźđģğ',\r\n        ACCENTS_LOWER_REPLACE: 'aaaaaaaaooooooodzeeeeeeccciiiiiuuuuulllnnnrssstyyzzzdgg',\r\n        NUMBERS: '0123456789',\r\n        SPECIAL_CHARS: '\\\\/.,;+*^$€£¤[](){}=!?<>|:-\"\\'#%&`²~_@§',\r\n    };\r\n\r\n    constructor(private _options?: iNoRegexOpt){\r\n        this._options = {\r\n            ...noRegex.DEFAULT,\r\n            ..._options\r\n        };\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Test if the given string match options.\r\n     * @param str\r\n     * @return boolean\r\n     */\r\n    public test = (str: string) :boolean  => {\r\n        let result = true;\r\n        if((result) && (!this._options.acceptNumbers)){\r\n            result = !this._containNumbers(str);\r\n        }\r\n        if((result) && (!this._options.acceptLowercase)){\r\n            result = !this._containLowercase(str);\r\n        }\r\n        if((result) && (!this._options.acceptUppercase)){\r\n            result = !this._containUppercase(str);\r\n        }\r\n        if((result) && (!this._options.acceptAccents)){\r\n            result = !this._containAccents(str);\r\n        }\r\n        if((result) && (!this._options.acceptStrings)){\r\n            result = !this._containStrings(str);\r\n        }\r\n        if((result) && (!this._options.acceptSpecialChars)){\r\n            result = !this._containSpecialChars(str);\r\n        }\r\n        if((result) && (!this._options.acceptWhiteSpaces)){\r\n            result = !this._containWhiteSpaces(str);\r\n        }\r\n\r\n        //specialRules opts\r\n        if((result) && (typeof this._options.specialRules.forbiddenChars === 'string')){\r\n            result = !this._testCharList(str, this._options.specialRules.forbiddenChars);\r\n        }\r\n\r\n        //length opts\r\n        if((result) && (typeof this._options.length.equals === 'number')){\r\n            result = (str.length === this._options.length.equals);\r\n        }\r\n        if((result) && (typeof this._options.length.min === 'number')){\r\n            result = (str.length >= this._options.length.min);\r\n        }\r\n        if((result) && (typeof this._options.length.max === 'number')){\r\n            result = (str.length <= this._options.length.max);\r\n        }\r\n\r\n        //affix opts\r\n        if((result) && (typeof this._options.affix.startsWith === 'string')){\r\n            result = (str.startsWith(this._options.affix.startsWith));\r\n        }\r\n        if((result) && (typeof this._options.affix.endsWith === 'string')){\r\n            result = (str.endsWith(this._options.affix.endsWith));\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Remove all characters from the given string that doesn't match options.\r\n     * @param str\r\n     * @return string\r\n     */\r\n    public format = (str: string) :string => {\r\n        if(!this._options.acceptNumbers){\r\n            str = this._replaceNumbers(str);\r\n        }\r\n        if(!this._options.acceptLowercase){\r\n            str = this._replaceLowercase(str);\r\n        }\r\n        if(!this._options.acceptUppercase){\r\n            str = this._replaceUppercase(str);\r\n        }\r\n        if(!this._options.acceptAccents){\r\n            str = this._replaceAccents(str);\r\n        }\r\n        if(!this._options.acceptStrings){\r\n            str = this._replaceStrings(str);\r\n        }\r\n        if(!this._options.acceptSpecialChars){\r\n            str = this._replaceSpecialChars(str);\r\n        }\r\n        if(!this._options.acceptWhiteSpaces){\r\n            str = this._replaceWhiteSpaces(str);\r\n        }\r\n\r\n        //specialRules opts\r\n        if(typeof this._options.specialRules.forbiddenChars === 'string'){\r\n            str = this._removeCharList(str, this._options.specialRules.forbiddenChars);\r\n        }\r\n\r\n        //length opts\r\n        if(typeof this._options.length.equals === 'number'){\r\n            if(str.length < (this._options.length.equals - this._getMissingAffixLength(str))){\r\n                str = str.padEnd((this._options.length.equals - this._getMissingAffixLength(str)), this._getAllowedCharToFill());\r\n            }\r\n            if(str.length > (this._options.length.equals - this._getMissingAffixLength(str))){\r\n                str = str.substr(0, (this._options.length.equals  - this._getMissingAffixLength(str)));\r\n            }\r\n        }\r\n        if((typeof this._options.length.min === 'number') && (str.length < this._options.length.min)){\r\n            str = str.padEnd(this._options.length.min, this._getAllowedCharToFill());\r\n        }\r\n        if((typeof this._options.length.max === 'number') && (str.length > (this._options.length.max - this._getMissingAffixLength(str)))){\r\n            str = (str.length < (this._options.length.max - this._getMissingAffixLength(str))) ? str : str.substr(0, (this._options.length.max - this._getMissingAffixLength(str)));\r\n        }\r\n\r\n        //affix opts\r\n        if(typeof this._options.affix.startsWith === 'string'){\r\n            str = (str.startsWith(this._options.affix.startsWith)) ? str : (this._options.affix.startsWith + str);\r\n        }\r\n        if(typeof this._options.affix.endsWith === 'string'){\r\n            str = (str.endsWith(this._options.affix.endsWith)) ? str : (str + this._options.affix.endsWith);\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n\r\n\r\n    //HELPERS\r\n    private _isCharAllowedBySpecialRules = (char: string) :boolean => {\r\n        return (typeof this._options.specialRules.allowedChars === 'string') && (this._options.specialRules.allowedChars.split('').indexOf(char) !== -1);\r\n    };\r\n    private _isCharForbiddenBySpecialRules = (char: string) :boolean => {\r\n        return (typeof this._options.specialRules.forbiddenChars === 'string') && (this._options.specialRules.forbiddenChars.indexOf(char) !== -1);\r\n    };\r\n\r\n    private _testCharList = (target: string, testList: string) :boolean => {\r\n        let result = false;\r\n        let charArrayTest = testList.split('');\r\n        for (let i = 0; i < charArrayTest.length; i++) {\r\n            if ((target.indexOf(charArrayTest[i]) !== -1) && (!this._isCharAllowedBySpecialRules(charArrayTest[i]))) {\r\n                result = true;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    private _replaceCharList = (target: string, testList: string, replaceList: string) :string => {\r\n        let testArray = testList.split('');\r\n        let replaceArray = replaceList.split('');\r\n        return target.split('').map((char) => {\r\n            return ((testArray.indexOf(char) === -1) || (this._isCharAllowedBySpecialRules(char))) ? char : replaceArray[testArray.indexOf(char)];\r\n        }).join('');\r\n    };\r\n\r\n    private _removeCharList = (target: string, testList: string) :string => {\r\n        let testArray = testList.split('');\r\n        return target.split('').map((char) => {\r\n            return ((testArray.indexOf(char) === -1) || (this._isCharAllowedBySpecialRules(char))) ? char : '';\r\n        }).join('');\r\n    };\r\n\r\n    private _getAllowedCharToFill = () :string => {\r\n        let result = '';\r\n        if(typeof this._options.specialRules.allowedChars === 'string'){\r\n            result = this._options.specialRules.allowedChars[0];\r\n        } else if(this._options.acceptSpecialChars && (!this._isCharForbiddenBySpecialRules('-'))){\r\n            result = '-';\r\n        } else if(this._options.acceptSpecialChars && (!this._isCharForbiddenBySpecialRules('_'))){\r\n            result = '_';\r\n        } else if(this._options.acceptSpecialChars && (!this._isCharForbiddenBySpecialRules('.'))){\r\n            result = '.';\r\n        } else if(this._options.acceptWhiteSpaces && (!this._isCharForbiddenBySpecialRules(' '))){\r\n            result = ' ';\r\n        } else if(this._options.acceptNumbers && (!this._isCharForbiddenBySpecialRules(' 0'))){\r\n            result = '0';\r\n        } else if(this._options.acceptLowercase && (!this._isCharForbiddenBySpecialRules('a'))){\r\n            result = 'a';\r\n        } else if(this._options.acceptUppercase && (!this._isCharForbiddenBySpecialRules('A'))){\r\n            result = 'A';\r\n        } else if(this._options.acceptAccents && (!this._isCharForbiddenBySpecialRules('à'))){\r\n            result = 'à';\r\n        } else if(this._options.acceptStrings && (!this._isCharForbiddenBySpecialRules('a'))){\r\n            result = 'a';\r\n        }\r\n        return result;\r\n    };\r\n\r\n    private _getMissingAffixLength = (str) :number => {\r\n        let count = 0;\r\n        if(typeof this._options.affix.startsWith === 'string'){\r\n            count += (str.startsWith(this._options.affix.startsWith)) ? 0 : this._options.affix.startsWith.length;\r\n        }\r\n        if(typeof this._options.affix.endsWith === 'string'){\r\n            count += (str.endsWith(this._options.affix.endsWith)) ? 0 : this._options.affix.endsWith.length;\r\n        }\r\n        return count;\r\n    };\r\n\r\n\r\n\r\n    //UPPERCASE\r\n    private _containUppercase = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.UPPER_CASE + noRegex.CHAR_LISTS.ACCENTS_UPPER);\r\n    };\r\n    private _replaceUppercase = (str: string) :string => {\r\n        let tmp = this._replaceCharList(str, noRegex.CHAR_LISTS.ACCENTS_UPPER, noRegex.CHAR_LISTS.ACCENTS_UPPER_REPLACE);\r\n        return this._replaceCharList(tmp, noRegex.CHAR_LISTS.UPPER_CASE, noRegex.CHAR_LISTS.LOWER_CASE);\r\n    };\r\n\r\n    //LOWERCASE\r\n    private _containLowercase = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.LOWER_CASE + noRegex.CHAR_LISTS.ACCENTS_LOWER);\r\n    };\r\n    private _replaceLowercase = (str: string) :string => {\r\n        let tmp = this._replaceCharList(str, noRegex.CHAR_LISTS.ACCENTS_LOWER, noRegex.CHAR_LISTS.ACCENTS_LOWER_REPLACE);\r\n        return this._replaceCharList(tmp, noRegex.CHAR_LISTS.LOWER_CASE, noRegex.CHAR_LISTS.UPPER_CASE);\r\n    };\r\n\r\n    //STRINGS\r\n    private _containStrings = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.LOWER_CASE + noRegex.CHAR_LISTS.UPPER_CASE + noRegex.CHAR_LISTS.ACCENTS_LOWER + noRegex.CHAR_LISTS.ACCENTS_UPPER);\r\n    };\r\n    private _replaceStrings = (str: string) :string => {\r\n        return this._removeCharList(str, noRegex.CHAR_LISTS.LOWER_CASE + noRegex.CHAR_LISTS.UPPER_CASE + noRegex.CHAR_LISTS.ACCENTS_LOWER + noRegex.CHAR_LISTS.ACCENTS_UPPER);\r\n    };\r\n\r\n    //NUMBERS\r\n    private _containNumbers = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.NUMBERS);\r\n    };\r\n    private _replaceNumbers = (str: string) :string => {\r\n        return this._removeCharList(str, noRegex.CHAR_LISTS.NUMBERS);\r\n    };\r\n\r\n    //ACCENTS\r\n    private _containAccents = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.ACCENTS_LOWER + noRegex.CHAR_LISTS.ACCENTS_UPPER);\r\n    };\r\n    private _replaceAccents = (str: string) :string => {\r\n        return this._replaceCharList(str, noRegex.CHAR_LISTS.ACCENTS_LOWER + noRegex.CHAR_LISTS.ACCENTS_UPPER, noRegex.CHAR_LISTS.ACCENTS_LOWER_REPLACE + noRegex.CHAR_LISTS.ACCENTS_UPPER_REPLACE);\r\n    };\r\n\r\n    //SPECIAL CHARS\r\n    private _containSpecialChars = (str: string) :boolean => {\r\n        return this._testCharList(str, noRegex.CHAR_LISTS.SPECIAL_CHARS);\r\n    };\r\n    private _replaceSpecialChars = (str: string) :string => {\r\n        return this._removeCharList(str, noRegex.CHAR_LISTS.SPECIAL_CHARS);\r\n    };\r\n\r\n    //WHITE SPACES\r\n    private _containWhiteSpaces = (str: string) :boolean => {\r\n        return this._testCharList(str, ' ');\r\n    };\r\n    private _replaceWhiteSpaces = (str: string) :string => {\r\n        return this._removeCharList(str, ' ');\r\n    };\r\n}\r\n"],"names":[],"mappings":"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"}